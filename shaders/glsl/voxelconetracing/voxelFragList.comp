#version 450
#extension GL_ARB_separate_shader_objects : enable

#define WORKGROUP_X_SIZE_MAX 1024

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;


layout(set=0, binding = 0, rgba16f) uniform image3D voxelTexture;

layout(set = 0, binding = 1) buffer VoxelFragCount {
 	  uint fragCount;  
};

struct FragmentListData
{
	vec4 data;
};

layout(set = 0, binding = 2) buffer VoxelPos {
 	  FragmentListData voxelPos[];  
};

layout(set = 0, binding = 3) buffer VoxelAlbedo {
 	  FragmentListData voxelAlbedo[];  
};

void main() {

			
	//get counter
	vec4 albedo = imageLoad(voxelTexture, ivec3(gl_WorkGroupID.xyz));

	if(albedo.w <= 0.0)
		return;
	else	
	{
		uint oldIndex = atomicAdd(fragCount, 1);	

		voxelPos[oldIndex].data = vec4( vec3(float(gl_WorkGroupID.x) + 0.5, float(gl_WorkGroupID.y) + 0.5, float(gl_WorkGroupID.z) + 0.5), 1.0);
		voxelAlbedo[oldIndex].data = albedo;
		
	}		
	
}
 